"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("main",{

/***/ "./sentry.client.config.js":
/*!*********************************!*\
  !*** ./sentry.client.config.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sentry_nextjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/nextjs */ \"./node_modules/@sentry/nextjs/esm/index.client.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\nvar _sentryCollisionFreeGlobalObject =  false ? 0 : window;\n_sentryCollisionFreeGlobalObject[\"__sentryRewritesTunnelPath__\"] = undefined;\n_sentryCollisionFreeGlobalObject[\"SENTRY_RELEASE\"] = {\n    \"id\": \"development\"\n};\n_sentryCollisionFreeGlobalObject[\"__rewriteFramesAssetPrefixPath__\"] = \"\";\n// This file configures the initialization of Sentry on the browser.\n// The config you add here will be used whenever a page is visited.\n// https://docs.sentry.io/platforms/javascript/guides/nextjs/\n\nconst SENTRY_DSN = process.env.SENTRY_DSN || process.env.NEXT_PUBLIC_SENTRY_DSN;\n_sentry_nextjs__WEBPACK_IMPORTED_MODULE_0__.init({\n    dsn: SENTRY_DSN || \"https://7376f4b5e18348bfb1f10a362751df61@o4504595307757568.ingest.sentry.io/4504595350814720\",\n    // Adjust this value in production, or use tracesSampler for greater control\n    tracesSampleRate: 1.0,\n    replaysSessionSampleRate: 0.1,\n    // ...\n    // Note: if you want to override the automatic release value, do not set a\n    // `release` value here - use the environment variable `SENTRY_RELEASE`, so\n    // that it will also get attached to your source maps\n    replaysOnErrorSampleRate: 1.0,\n    integrations: [\n        new _sentry_nextjs__WEBPACK_IMPORTED_MODULE_0__.Replay()\n    ]\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zZW50cnkuY2xpZW50LmNvbmZpZy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFJQSxtQ0FBbUMsTUFBNkIsR0FBR0MsQ0FBTUEsR0FBR0MsTUFBTTtBQUN0RkYsZ0NBQWdDLENBQUMsK0JBQStCLEdBQUdHO0FBQ25FSCxnQ0FBZ0MsQ0FBQyxpQkFBaUIsR0FBRztJQUFDLE1BQUs7QUFBYTtBQUN4RUEsZ0NBQWdDLENBQUMsbUNBQW1DLEdBQUc7QUFFdkUsb0VBQW9FO0FBQ3BFLG1FQUFtRTtBQUNuRSw2REFBNkQ7QUFFcEI7QUFFekMsTUFBTUssYUFBYUMsT0FBT0EsQ0FBQ0MsR0FBRyxDQUFDRixVQUFVLElBQUlDLE9BQU9BLENBQUNDLEdBQUcsQ0FBQ0Msc0JBQXNCO0FBRS9FSixnREFBVyxDQUFDO0lBQ1ZNLEtBQUtMLGNBQWM7SUFDbkIsNEVBQTRFO0lBQzVFTSxrQkFBa0I7SUFFbEJDLDBCQUEwQjtJQUMxQixNQUFNO0lBQ04sMEVBQTBFO0lBQzFFLDJFQUEyRTtJQUMzRSxxREFBcUQ7SUFDckRDLDBCQUEwQjtJQUUxQkMsY0FBYztRQUFDLElBQUlWLGtEQUFhO0tBQzlCO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc2VudHJ5LmNsaWVudC5jb25maWcuanM/Y2Q4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX3NlbnRyeUNvbGxpc2lvbkZyZWVHbG9iYWxPYmplY3QgPSB0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogd2luZG93O1xuX3NlbnRyeUNvbGxpc2lvbkZyZWVHbG9iYWxPYmplY3RbXCJfX3NlbnRyeVJld3JpdGVzVHVubmVsUGF0aF9fXCJdID0gdW5kZWZpbmVkO1xuX3NlbnRyeUNvbGxpc2lvbkZyZWVHbG9iYWxPYmplY3RbXCJTRU5UUllfUkVMRUFTRVwiXSA9IHtcImlkXCI6XCJkZXZlbG9wbWVudFwifTtcbl9zZW50cnlDb2xsaXNpb25GcmVlR2xvYmFsT2JqZWN0W1wiX19yZXdyaXRlRnJhbWVzQXNzZXRQcmVmaXhQYXRoX19cIl0gPSBcIlwiO1xuXG4vLyBUaGlzIGZpbGUgY29uZmlndXJlcyB0aGUgaW5pdGlhbGl6YXRpb24gb2YgU2VudHJ5IG9uIHRoZSBicm93c2VyLlxuLy8gVGhlIGNvbmZpZyB5b3UgYWRkIGhlcmUgd2lsbCBiZSB1c2VkIHdoZW5ldmVyIGEgcGFnZSBpcyB2aXNpdGVkLlxuLy8gaHR0cHM6Ly9kb2NzLnNlbnRyeS5pby9wbGF0Zm9ybXMvamF2YXNjcmlwdC9ndWlkZXMvbmV4dGpzL1xuXG5pbXBvcnQgKiBhcyBTZW50cnkgZnJvbSAnQHNlbnRyeS9uZXh0anMnO1xuXG5jb25zdCBTRU5UUllfRFNOID0gcHJvY2Vzcy5lbnYuU0VOVFJZX0RTTiB8fCBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TRU5UUllfRFNOO1xuXG5TZW50cnkuaW5pdCh7XG4gIGRzbjogU0VOVFJZX0RTTiB8fCAnaHR0cHM6Ly83Mzc2ZjRiNWUxODM0OGJmYjFmMTBhMzYyNzUxZGY2MUBvNDUwNDU5NTMwNzc1NzU2OC5pbmdlc3Quc2VudHJ5LmlvLzQ1MDQ1OTUzNTA4MTQ3MjAnLFxuICAvLyBBZGp1c3QgdGhpcyB2YWx1ZSBpbiBwcm9kdWN0aW9uLCBvciB1c2UgdHJhY2VzU2FtcGxlciBmb3IgZ3JlYXRlciBjb250cm9sXG4gIHRyYWNlc1NhbXBsZVJhdGU6IDEuMCxcblxuICByZXBsYXlzU2Vzc2lvblNhbXBsZVJhdGU6IDAuMSxcbiAgLy8gLi4uXG4gIC8vIE5vdGU6IGlmIHlvdSB3YW50IHRvIG92ZXJyaWRlIHRoZSBhdXRvbWF0aWMgcmVsZWFzZSB2YWx1ZSwgZG8gbm90IHNldCBhXG4gIC8vIGByZWxlYXNlYCB2YWx1ZSBoZXJlIC0gdXNlIHRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZSBgU0VOVFJZX1JFTEVBU0VgLCBzb1xuICAvLyB0aGF0IGl0IHdpbGwgYWxzbyBnZXQgYXR0YWNoZWQgdG8geW91ciBzb3VyY2UgbWFwc1xuICByZXBsYXlzT25FcnJvclNhbXBsZVJhdGU6IDEuMCxcblxuICBpbnRlZ3JhdGlvbnM6IFtuZXcgU2VudHJ5LlJlcGxheShcbiAgKV0sXG59KTtcbiJdLCJuYW1lcyI6WyJfc2VudHJ5Q29sbGlzaW9uRnJlZUdsb2JhbE9iamVjdCIsImdsb2JhbCIsIndpbmRvdyIsInVuZGVmaW5lZCIsIlNlbnRyeSIsIlNFTlRSWV9EU04iLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU0VOVFJZX0RTTiIsImluaXQiLCJkc24iLCJ0cmFjZXNTYW1wbGVSYXRlIiwicmVwbGF5c1Nlc3Npb25TYW1wbGVSYXRlIiwicmVwbGF5c09uRXJyb3JTYW1wbGVSYXRlIiwiaW50ZWdyYXRpb25zIiwiUmVwbGF5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./sentry.client.config.js\n"));

/***/ })

});